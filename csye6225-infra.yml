Parameters:
  VpcName:
    Description: VPC Name
    Type: String
    Default: myVPC1

  VpcCIDR:
    Description: IP Range (CIDR Notation) for VPC
    Type: String
    Default: 10.10.0.0/16

  # Creating 3 subnets (Each for different AZ)
  Subnet1CIDR:
    Description: Enter the IP Range (CIDR Notation) for the subnet in AZ 1
    Type: String
    Default: 10.10.1.0/24

  Subnet2CIDR:
    Description: Enter the IP Range (CIDR Notation) for the subnet in AZ 2
    Type: String
    Default: 10.10.2.0/24

  Subnet3CIDR:
    Description: Enter the IP Range (CIDR Notation) for the subnet in AZ 3
    Type: String
    Default: 10.10.3.0/24

  AMI:
    Description: "AMI for Instance"
    Type: String

  KeyName:
    Description: "Key Name for Instance"
    Type: String


Resources:
  # Create a VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Ref VpcName

  # Create an Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  # Attach the Internet Gateway to VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Create a public route table for the VPC
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
      - Key: Name
        Value: RouteTable

  # Add routes in the route table
  Route:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Create a subnet in AZ 1
  Subnet1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ''] # AZ 1
      CidrBlock: !Ref Subnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: Subnet1

  # Create a subnet in AZ 2
  Subnet2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ''] # AZ 2
      CidrBlock: !Ref Subnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: Subnet2

  # Create a subnet in AZ 3
  Subnet3:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ''] # AZ 3
      CidrBlock: !Ref Subnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: Subnet3

  # Associate Route Table with subnet in AZ 1
  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  # Associate Route Table with subnet in AZ 2
  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2

  # Associate Route Table with subnet in AZ 3
  Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet3

  # Adding a security group - Application
  Application:
   Type: AWS::EC2::SecurityGroup
   Properties:
      GroupDescription: Base Security Group
      SecurityGroupIngress:
         - IpProtocol: tcp
           CidrIp: 0.0.0.0/0
           FromPort: 22
           ToPort: 22
         - IpProtocol: tcp
           CidrIp: 0.0.0.0/0
           FromPort: 80
           ToPort: 80
         - IpProtocol: tcp
           CidrIp: 0.0.0.0/0
           FromPort: 443
           ToPort: 443
         - IpProtocol: tcp
           CidrIp: 0.0.0.0/0
           FromPort: 3000
           ToPort: 3000
         - IpProtocol: tcp
           CidrIp: 0.0.0.0/0
           FromPort: 3306
           ToPort: 3306
      VpcId: !Ref VPC

  # Adding a EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMI
      KeyName: !Ref KeyName
      InstanceType: "t2.micro"
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeType: "gp2"
            DeleteOnTermination: "false"
            VolumeSize: "60"
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeleteOnTermination: "true"
          SubnetId: !Ref Subnet1
          DeviceIndex: "0"
          GroupSet: 
            - !Ref Application
